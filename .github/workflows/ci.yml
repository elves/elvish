name: Continuous Integration

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  test:
    name: Test
    strategy:
      matrix:
        os: [ubuntu, macos, windows]
        go-version: [1.15.x]
        upload-coverage: ['upload']
        include:
          # Test old supported Go version
          - os: ubuntu
            go-version: 1.14.x
            upload-coverage: 'skip'
    env:
      ELVISH_TEST_TIME_SCALE: 20
    runs-on: ${{ matrix.os }}-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Set up cache
      uses: actions/cache@v2
      with:
        path: |
          ~/go/pkg/mod
          ~/.cache/go-build
          ~/Library/Caches/go-build
          %LocalAppData%\go-build
        key: build/${{ matrix.os }}/${{ matrix.go-version }}/${{ hashFiles('go.sum') }}
        restore-keys: |
          build/${{ matrix.os }}/${{ matrix.go-version }}/
          build/${{ matrix.os }}/
    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go-version }}
    - name: Test with race detection
      run: go test -race ./...
    - name: Generate coverage
      if: matrix.upload-coverage != 'skip'
      run: go test -coverprofile=cover -coverpkg=./pkg/... ./pkg/...
    - name: Upload coverage to codecov
      if: matrix.upload-coverage != 'skip'
      uses: codecov/codecov-action@v1
      with:
        files: ./cover

  build:
    name: Build binaries
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Set up cache
      uses: actions/cache@v2
      with:
        path: |
          ~/go/pkg/mod
          ~/.cache/go-build
        key: build/ubuntu/1.15.x/${{ hashFiles('go.sum') }}
        restore-keys: |
          build/ubuntu/1.15.x/
          build/ubuntu/
    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.15.x
    - name: Build binaries
      # TODO: Use PR number for suffix when running for PR
      run: ELVISH_REPRODUCIBLE=dev ./tools/buildall.sh . bin HEAD
    - name: Upload binaries
      uses: actions/upload-artifact@v2
      with:
        name: bin
        path: bin/**/*

  checkstyle-go:
    name: Check style of **.go
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Set up environment
      run: echo "PATH=$HOME/go/bin:$PATH" >> $GITHUB_ENV
    - name: Set up cache
      uses: actions/cache@v2
      with:
        path: |
          ~/go/pkg/mod
          ~/.cache/go-build
        key: checkstyle-go
    - name: Set up Go
      uses: actions/setup-go@v2
    - name: Set up goimports
      run: go get golang.org/x/tools/cmd/goimports
    - name: Check style
      run: ./tools/checkstyle-go.sh

  checkstyle-md:
    name: Check style of **.md
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Set up environment
      run: |
        echo "NPM_PREFIX=$HOME/npm" >> $GITHUB_ENV
        echo "PATH=$HOME/npm/bin:$PATH" >> $GITHUB_ENV
    - name: Set up cache
      uses: actions/cache@v2
      with:
        path: ~/npm
        key: checkstyle-md
    - name: Set up Node
      uses: actions/setup-node@v2
    - name: Set up Node prefix
      run: npm config set prefix $NPM_PREFIX
    - name: Set up prettier
      run: npm install --global prettier@2.0.5
    - name: Check style
      run: ./tools/checkstyle-md.sh
