package eval

import "math"

// MathNs contains essential math functions.
var MathNs = NewNs().AddGoFns("math", map[string]interface{}{
	"float32frombits": math.Float32frombits,
	"float64frombits": math.Float32frombits,
	"float32bits":     math.Float32bits,
	"float64bits":     math.Float64bits,
	"nextafter32":     math.Nextafter32,
	"nextafter":       math.Nextafter,
	"remainder":       math.Remainder,
	"roundtoeven":     math.RoundToEven,
	"signbit":         math.Signbit,
	"copysign":        math.Copysign,
	"abs":             math.Abs,
	"ceil":            math.Ceil,
	"floor":           math.Floor,
	"round":           math.Round,
	"pow":             math.Pow,
	"cos":             math.Cos,
	"sin":             math.Sin,
	"log":             math.Log,
	"min":             math.Min,
	"max":             math.Max,
	"atan":            math.Atan,
	"tan":             math.Tan,
	"acos":            math.Acos,
	"asin":            math.Asin,
	"atan2":           math.Atan2,
	"cosh":            math.Cosh,
	"sinh":            math.Sinh,
	"tanh":            math.Tanh,
	"acosh":           math.Acosh,
	"asinh":           math.Asinh,
	"atanh":           math.Atanh,
	"exp":             math.Exp,
	"frexp":           math.Frexp,
	"ldexp":           math.Ldexp,
	"log10":           math.Log10,
	"modf":            math.Modf,
	"exp2":            math.Exp2,
	"expm1":           math.Expm1,
	"ilogb":           math.Ilogb,
	"log1p":           math.Log1p,
	"log2":            math.Log2,
	"logb":            math.Logb,
	"sqrt":            math.Sqrt,
	"cbrt":            math.Cbrt,
	"hypot":           math.Hypot,
	"erf":             math.Erf,
	"erfc":            math.Erfc,
	"nan":             math.NaN,
	"gamma":           math.Gamma,
	"dim":             math.Dim,
	"mod":             math.Mod,
	"sincos":          math.Sincos,
	"erfcinv":         math.Erfcinv,
	"erfinv":          math.Erfinv,
	"inf":             math.Inf,
	"isinf":           math.IsInf,
	"isnan":           math.IsNaN,
	"j0":              math.J0,
	"j1":              math.J1,
	"jn":              math.Jn,
	"lgamma":          math.Lgamma,
	"pow10":           math.Pow10,
	"trunc":           math.Trunc,
	"y0":              math.Y0,
	"y1":              math.Y1,
	"yn":              math.Yn,
})
